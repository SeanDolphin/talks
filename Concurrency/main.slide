# Slide 1
Concurrency in Golang
14:00 8 Oct 2016
Tags: go golang

Sean Dolphin
KPCompass, Inc.

https://github.com/go-phoenix-chandler

# Slide 2
* Blank slide

# Slide 3
* Running a function concurrently
.play src/done.go /START OMIT/,/END OMIT/

By placing the key word "Go" in front of a function and calling it results in the function working concurrently.

# Slide 4
* Last Slide for Realz
Thanks that is all have a good day.

# Slide 5
* So I lied
- That was making things work concurrently 
	go func(a int) {} (1)
- But not communicationg with them
	make(chan int) // channel of ints
	make(chan struct{}) // channel of custom things
	make(chan []arrayofthings) // a channel of arrays of antyhing
	make(chan bool, 10) //buffered channel
	make(chan chan bool) //channel of channels
	make(chan chan chan bool) // a channel into a rabbit hole
- Synchronzing them

# Slide 6
* Concurrency Patterns
- Generator / Producer
- Consumer
- Pipelines
- Fan-in/out
- Cancellation
- Context

# Slide 7
* Generator / Producer
.play src/generator.go /START OMIT/,/END OMIT/

# Slide 8
* Consumer
.play src/consumer.go /START OMIT/,/END OMIT/

# Slide 9
* Pipeline
.play src/pipeline.go /START OMIT/,/END OMIT/

# Slide 10
* Fan-in
.play src/fan.go /START OMIT/,/END OMIT/

# Slide 11
* Cancellation
.play src/cancellation.go /START OMIT/,/END OMIT/

# Slide 12
* Context
.play src/context.go /START OMIT/,/END OMIT/

# Slide Links
* Links

Go Concurrency Patterns (2012)

.link http://talks.golang.org/2012/concurrency.slide talks.golang.org/2012/concurrency.slide

Advanced Concurrent Patterns (2013)

.link http://talks.golang.org/2013/advconc.slide talks.golang.org/2013/advconc.slide

Go Concurrrency Patters: Pipelines (2014)

.link http://blog.golang.org/pipelines blog.golang.org/pipelines

Go Concurrrency Patters: Context (2014)

.link https://blog.golang.org/context blog.golang.org/context
